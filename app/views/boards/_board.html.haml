- if user_signed_in? and game.gote_user == current_user
  - reverse = true
  - x_range = (1..9).to_a
  - y_range = x_range.reverse
  - play = game.playing?
- elsif user_signed_in? and game.sente_user == current_user
  - reverse = false
  - y_range = (1..9).to_a
  - x_range = y_range.reverse
  - play = game.playing?
- else
  - reverse = false
  - y_range = (1..9).to_a
  - x_range = y_range.reverse
  - play = false
= render 'boards/in_hand', game: game, board: board, direction: 'downward', reverse: reverse, play: play
.board{ id: board.id, game_id: game.id, turn: (board.sente? ? 'gote' : 'sente'), number: game.boards.count, play: play, reload: game.playing? }
  .pieces
    .row
      .corner_cell.left.top
      - x_range.each do |x|
        - if reverse
          .edge_cell
        - else
          .edge_cell
            = x
      .corner_cell.right.top
    - y_range.each do |y|
      .row
        - if reverse
          .side_cell.reverse
            = convert_number_to_kanji(y)
        - else
          .side_cell
        - x_range.each do |x|
          - piece = board.piece_on_point([x, y])
          - if piece
            - moved = piece_moved(piece, board.movement)
          - else
            - moved = nil
          .cell{ x: x, y: y, class: (moved ? 'moved' : nil) }
            - if piece
              - piece_decorator = PieceDecorator.new piece
              - piece_decorator.reverse = reverse
              = piece_decorator.tagify(play, board.movement)
        - if reverse
          .side_cell
        - else
          .side_cell
            = convert_number_to_kanji(y)
    .row
      .corner_cell.left.bottom
      - x_range.each do |x|
        - if reverse
          .edge_cell.reverse
            = x
        - else
          .edge_cell
      .corner_cell.right.bottom
= render 'boards/in_hand', game: game, board: board, direction: 'upward', reverse: reverse, play: play
